{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","data","setData","useState","location","setLocation","url","React","createElement","className","value","onChange","event","target","onKeyPress","key","axios","get","then","response","console","log","placeholder","type","name","main","temp","toFixed","weather","undefined","feels_like","humidity","wind","speed","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"mNAqEeA,MAlEf,WACE,MAAOC,EAAMC,GAAWC,mBAAS,KAC1BC,EAAUC,GAAeF,mBAAS,IAEnCG,EAAM,qDAAqDF,wDAYjE,OACEG,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAA,SACEE,MAAON,EACPO,SAAUC,GAASP,EAAYO,EAAMC,OAAOH,OAC5CI,WAhBgBF,IACJ,UAAdA,EAAMG,MACRC,IAAMC,IAAIX,GAAKY,KAAMC,IACnBjB,EAAQiB,EAASlB,MACjBmB,QAAQC,IAAIF,EAASlB,QAEvBI,EAAY,MAWRiB,YAAY,mBACZC,KAAK,UAEThB,IAAAC,cAAA,OAAKC,UAAU,aACfF,IAAAC,cAAA,OAAKC,UAAU,OACfF,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,SAAIP,EAAKuB,OAEXjB,IAAAC,cAAA,OAAKC,UAAU,QACZR,EAAKwB,KAAOlB,IAAAC,cAAA,UAAKP,EAAKwB,KAAKC,KAAKC,UAAU,SAAQ,MAGrDpB,IAAAC,cAAA,OAAKC,UAAU,eACZR,EAAK2B,QAAUrB,IAAAC,cAAA,SAAIP,EAAK2B,QAAQ,GAAGH,MAAU,YAKvCI,IAAd5B,EAAKuB,MACJjB,IAAAC,cAAA,OAAKC,UAAU,UACXF,IAAAC,cAAA,OAAKC,UAAU,SACZR,EAAKwB,KAAOlB,IAAAC,cAAA,KAAGC,UAAU,QAAQR,EAAKwB,KAAKK,WAAW,SAAQ,KAC/DvB,IAAAC,cAAA,SAAG,aAEHD,IAAAC,cAAA,OAAKC,UAAU,YACZR,EAAKwB,KAAOlB,IAAAC,cAAA,KAAGC,UAAU,QAAQR,EAAKwB,KAAKM,SAAS,KAAO,KAC5DxB,IAAAC,cAAA,SAAG,gBAEHD,IAAAC,cAAA,OAAKC,UAAU,QACZR,EAAK+B,KAAOzB,IAAAC,cAAA,KAAGC,UAAU,QAAQR,EAAK+B,KAAKC,MAAM,QAAU,KAE5D1B,IAAAC,cAAA,SAAG,wBC7CA0B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,KAAKmB,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxC,IAAAC,cAACD,IAAMyC,WAAU,KACfzC,IAAAC,cAACR,EAAG,QAORkC,M","file":"static/js/main.001c0ec6.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\n\nfunction App() {\n  const [data, setData] = useState({})\n  const [location, setLocation] = useState('')\n\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=895284fb2d2c50a520ea537456963d9c`\n\n  const searchLocation = (event) => {\n    if (event.key === 'Enter') {\n      axios.get(url).then((response) => {\n        setData(response.data)\n        console.log(response.data)\n      })\n      setLocation('')\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"search\">\n        <input\n          value={location}\n          onChange={event => setLocation(event.target.value)}\n          onKeyPress={searchLocation}\n          placeholder='Entrer une ville'\n          type=\"text\" />\n      </div>\n      <div className=\"container\">\n      <div className=\"top\">\n      <div className=\"location\">\n        <p>{data.name}</p>\n      </div>\n      <div className=\"temp\">\n        {data.main ? <h1>{data.main.temp.toFixed()}°C</h1>:null}\n       \n      </div>\n      <div className=\"description\">\n        {data.weather ? <p>{data.weather[0].main}</p>:null}\n      \n      </div>\n      </div>\n\n{data.name !== undefined &&\n  <div className=\"bottom\">\n      <div className=\"feels\">\n        {data.main ? <p className='bold'>{data.main.feels_like}°C</p>: null}\n        <p>Ressenti</p>\n        </div>\n        <div className='humidity'>\n          {data.main ? <p className='bold'>{data.main.humidity}%</p>: null}\n          <p>Humidité</p>\n          </div>\n          <div className=\"wind\">\n            {data.wind ? <p className='bold'>{data.wind.speed}km/h</p>: null}\n\n            <p>Vitesse du vent</p>\n          </div>\n        </div>\n}\n      \n\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n//https://api.openweathermap.org/data/2.5/weather?q=${cityNameFromInput}&units=metric&lang=fr&appid=098e8007998cfe69ee7be2eb0d276f7a\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}